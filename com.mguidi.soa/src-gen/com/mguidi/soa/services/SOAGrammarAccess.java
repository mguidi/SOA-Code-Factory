/*
* generated by Xtext
*/
package com.mguidi.soa.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SOAGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ArchitectureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Architecture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQualifiedNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cModuleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModuleModuleParserRuleCall_3_0 = (RuleCall)cModuleAssignment_3.eContents().get(0);
		
		//Architecture:
		//	"@applicationId" ":" name=QualifiedName module=Module;
		public ParserRule getRule() { return rule; }

		//"@applicationId" ":" name=QualifiedName module=Module
		public Group getGroup() { return cGroup; }

		//"@applicationId"
		public Keyword getApplicationIdKeyword_0() { return cApplicationIdKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//name=QualifiedName
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_2_0() { return cNameQualifiedNameParserRuleCall_2_0; }

		//module=Module
		public Assignment getModuleAssignment_3() { return cModuleAssignment_3; }

		//Module
		public RuleCall getModuleModuleParserRuleCall_3_0() { return cModuleModuleParserRuleCall_3_0; }
	}

	public class ModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Module");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cVersionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVersionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVersionVersionParserRuleCall_5_0 = (RuleCall)cVersionAssignment_5.eContents().get(0);
		private final Assignment cImportsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cImportsImportParserRuleCall_6_0 = (RuleCall)cImportsAssignment_6.eContents().get(0);
		private final Assignment cModelAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cModelModelParserRuleCall_7_0 = (RuleCall)cModelAssignment_7.eContents().get(0);
		private final Assignment cExceptionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cExceptionsExceptionsParserRuleCall_8_0 = (RuleCall)cExceptionsAssignment_8.eContents().get(0);
		private final Assignment cServicesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cServicesServiceParserRuleCall_9_0 = (RuleCall)cServicesAssignment_9.eContents().get(0);
		private final Assignment cEventAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEventEventParserRuleCall_10_0 = (RuleCall)cEventAssignment_10.eContents().get(0);
		
		//Module:
		//	"@moduleName" ":" name=ID "@version" ":" version=Version imports+=Import* model=Model? exceptions=Exceptions?
		//	services+=Service* event=Event?;
		public ParserRule getRule() { return rule; }

		//"@moduleName" ":" name=ID "@version" ":" version=Version imports+=Import* model=Model? exceptions=Exceptions?
		//services+=Service* event=Event?
		public Group getGroup() { return cGroup; }

		//"@moduleName"
		public Keyword getModuleNameKeyword_0() { return cModuleNameKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"@version"
		public Keyword getVersionKeyword_3() { return cVersionKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//version=Version
		public Assignment getVersionAssignment_5() { return cVersionAssignment_5; }

		//Version
		public RuleCall getVersionVersionParserRuleCall_5_0() { return cVersionVersionParserRuleCall_5_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_6() { return cImportsAssignment_6; }

		//Import
		public RuleCall getImportsImportParserRuleCall_6_0() { return cImportsImportParserRuleCall_6_0; }

		//model=Model?
		public Assignment getModelAssignment_7() { return cModelAssignment_7; }

		//Model
		public RuleCall getModelModelParserRuleCall_7_0() { return cModelModelParserRuleCall_7_0; }

		//exceptions=Exceptions?
		public Assignment getExceptionsAssignment_8() { return cExceptionsAssignment_8; }

		//Exceptions
		public RuleCall getExceptionsExceptionsParserRuleCall_8_0() { return cExceptionsExceptionsParserRuleCall_8_0; }

		//services+=Service*
		public Assignment getServicesAssignment_9() { return cServicesAssignment_9; }

		//Service
		public RuleCall getServicesServiceParserRuleCall_9_0() { return cServicesServiceParserRuleCall_9_0; }

		//event=Event?
		public Assignment getEventAssignment_10() { return cEventAssignment_10; }

		//Event
		public RuleCall getEventEventParserRuleCall_10_0() { return cEventEventParserRuleCall_10_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class VersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Version");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		
		//Version:
		//	INT "." INT "." INT ("-" ID)?;
		public ParserRule getRule() { return rule; }

		//INT "." INT "." INT ("-" ID)?
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }

		//"."
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }

		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }

		//("-" ID)?
		public Group getGroup_5() { return cGroup_5; }

		//"-"
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_5_1() { return cIDTerminalRuleCall_5_1; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportedNamespaceQualifiedNameParserRuleCall_2_0 = (RuleCall)cImportedNamespaceAssignment_2.eContents().get(0);
		
		//Import:
		//	"@import" ":" importedNamespace=QualifiedName;
		public ParserRule getRule() { return rule; }

		//"@import" ":" importedNamespace=QualifiedName
		public Group getGroup() { return cGroup; }

		//"@import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//importedNamespace=QualifiedName
		public Assignment getImportedNamespaceAssignment_2() { return cImportedNamespaceAssignment_2; }

		//QualifiedName
		public RuleCall getImportedNamespaceQualifiedNameParserRuleCall_2_0() { return cImportedNamespaceQualifiedNameParserRuleCall_2_0; }
	}

	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEntitiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntitiesEntitiesParserRuleCall_2_0 = (RuleCall)cEntitiesAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// ************************ Model definition ************************* / Model:
		//	"@model" "{" entities+=Entities* "}";
		public ParserRule getRule() { return rule; }

		//"@model" "{" entities+=Entities* "}"
		public Group getGroup() { return cGroup; }

		//"@model"
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//entities+=Entities*
		public Assignment getEntitiesAssignment_2() { return cEntitiesAssignment_2; }

		//Entities
		public RuleCall getEntitiesEntitiesParserRuleCall_2_0() { return cEntitiesEntitiesParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Comment");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueCOMMENTSTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//Comment:
		//	value=COMMENTS;
		public ParserRule getRule() { return rule; }

		//value=COMMENTS
		public Assignment getValueAssignment() { return cValueAssignment; }

		//COMMENTS
		public RuleCall getValueCOMMENTSTerminalRuleCall_0() { return cValueCOMMENTSTerminalRuleCall_0; }
	}

	public class EntitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entities");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entities:
		//	Entity | Enum;
		public ParserRule getRule() { return rule; }

		//Entity | Enum
		public Alternatives getAlternatives() { return cAlternatives; }

		//Entity
		public RuleCall getEntityParserRuleCall_0() { return cEntityParserRuleCall_0; }

		//Enum
		public RuleCall getEnumParserRuleCall_1() { return cEnumParserRuleCall_1; }
	}

	public class EnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Enum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesIDTerminalRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Enum:
		//	"@enum" name=ID "{" features+=ID+ "}";
		public ParserRule getRule() { return rule; }

		//"@enum" name=ID "{" features+=ID+ "}"
		public Group getGroup() { return cGroup; }

		//"@enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features+=ID+
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//ID
		public RuleCall getFeaturesIDTerminalRuleCall_3_0() { return cFeaturesIDTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity:
		//	"@entity" name=ID "{" features+=Feature+ "}";
		public ParserRule getRule() { return rule; }

		//"@entity" name=ID "{" features+=Feature+ "}"
		public Group getGroup() { return cGroup; }

		//"@entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features+=Feature+
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_3_0() { return cFeaturesFeatureParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFeatureCommentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFeatureCommentCommentParserRuleCall_0_0 = (RuleCall)cFeatureCommentAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeFeatureTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//Feature:
		//	featureComment+=Comment* name=ID ":" type=FeatureType;
		public ParserRule getRule() { return rule; }

		//featureComment+=Comment* name=ID ":" type=FeatureType
		public Group getGroup() { return cGroup; }

		//featureComment+=Comment*
		public Assignment getFeatureCommentAssignment_0() { return cFeatureCommentAssignment_0; }

		//Comment
		public RuleCall getFeatureCommentCommentParserRuleCall_0_0() { return cFeatureCommentCommentParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=FeatureType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//FeatureType
		public RuleCall getTypeFeatureTypeParserRuleCall_3_0() { return cTypeFeatureTypeParserRuleCall_3_0; }
	}

	public class FeatureTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntitiesFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPrimitiveFeatureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGenericListFeatureParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//FeatureType:
		//	EntitiesFeature | PrimitiveFeature | GenericListFeature;
		public ParserRule getRule() { return rule; }

		//EntitiesFeature | PrimitiveFeature | GenericListFeature
		public Alternatives getAlternatives() { return cAlternatives; }

		//EntitiesFeature
		public RuleCall getEntitiesFeatureParserRuleCall_0() { return cEntitiesFeatureParserRuleCall_0; }

		//PrimitiveFeature
		public RuleCall getPrimitiveFeatureParserRuleCall_1() { return cPrimitiveFeatureParserRuleCall_1; }

		//GenericListFeature
		public RuleCall getGenericListFeatureParserRuleCall_2() { return cGenericListFeatureParserRuleCall_2; }
	}

	public class EntitiesFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntitiesFeature");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeEntitiesCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeEntitiesQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeEntitiesCrossReference_0.eContents().get(1);
		
		//EntitiesFeature:
		//	type=[Entities|QualifiedName];
		public ParserRule getRule() { return rule; }

		//type=[Entities|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//[Entities|QualifiedName]
		public CrossReference getTypeEntitiesCrossReference_0() { return cTypeEntitiesCrossReference_0; }

		//QualifiedName
		public RuleCall getTypeEntitiesQualifiedNameParserRuleCall_0_1() { return cTypeEntitiesQualifiedNameParserRuleCall_0_1; }
	}

	public class PrimitiveFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveFeature");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypePrimitiveTypeEnumRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//PrimitiveFeature:
		//	type=PrimitiveType;
		public ParserRule getRule() { return rule; }

		//type=PrimitiveType
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//PrimitiveType
		public RuleCall getTypePrimitiveTypeEnumRuleCall_0() { return cTypePrimitiveTypeEnumRuleCall_0; }
	}

	public class GenericListFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericListFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLessThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeFeatureTypeParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GenericListFeature:
		//	"@List" "<" type=FeatureType ">";
		public ParserRule getRule() { return rule; }

		//"@List" "<" type=FeatureType ">"
		public Group getGroup() { return cGroup; }

		//"@List"
		public Keyword getListKeyword_0() { return cListKeyword_0; }

		//"<"
		public Keyword getLessThanSignKeyword_1() { return cLessThanSignKeyword_1; }

		//type=FeatureType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//FeatureType
		public RuleCall getTypeFeatureTypeParserRuleCall_2_0() { return cTypeFeatureTypeParserRuleCall_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_3() { return cGreaterThanSignKeyword_3; }
	}

	public class ExceptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Exceptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExceptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExceptionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExceptionsExceptionParserRuleCall_2_0 = (RuleCall)cExceptionsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// ************************ Service definition ************************* / Exceptions:
		//	"@exceptions" "{" exceptions+=Exception+ "}";
		public ParserRule getRule() { return rule; }

		//"@exceptions" "{" exceptions+=Exception+ "}"
		public Group getGroup() { return cGroup; }

		//"@exceptions"
		public Keyword getExceptionsKeyword_0() { return cExceptionsKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//exceptions+=Exception+
		public Assignment getExceptionsAssignment_2() { return cExceptionsAssignment_2; }

		//Exception
		public RuleCall getExceptionsExceptionParserRuleCall_2_0() { return cExceptionsExceptionParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ExceptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Exception");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExceptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMsgKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMsgAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMsgSTRINGTerminalRuleCall_5_0 = (RuleCall)cMsgAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Exception:
		//	"@exception" name=ID "{" "@msg" ":" msg=STRING "}";
		public ParserRule getRule() { return rule; }

		//"@exception" name=ID "{" "@msg" ":" msg=STRING "}"
		public Group getGroup() { return cGroup; }

		//"@exception"
		public Keyword getExceptionKeyword_0() { return cExceptionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"@msg"
		public Keyword getMsgKeyword_3() { return cMsgKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//msg=STRING
		public Assignment getMsgAssignment_5() { return cMsgAssignment_5; }

		//STRING
		public RuleCall getMsgSTRINGTerminalRuleCall_5_0() { return cMsgSTRINGTerminalRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperationsOperationParserRuleCall_3_0 = (RuleCall)cOperationsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// ************************ Service definition ************************* / Service:
		//	"@service" name=ID "{" operations+=Operation+ "}";
		public ParserRule getRule() { return rule; }

		//"@service" name=ID "{" operations+=Operation+ "}"
		public Group getGroup() { return cGroup; }

		//"@service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//operations+=Operation+
		public Assignment getOperationsAssignment_3() { return cOperationsAssignment_3; }

		//Operation
		public RuleCall getOperationsOperationParserRuleCall_3_0() { return cOperationsOperationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInputKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cFeaturesInputAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cFeaturesInputFeatureParserRuleCall_3_3_0 = (RuleCall)cFeaturesInputAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOutputKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cFeaturesOutputAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cFeaturesOutputFeatureParserRuleCall_4_3_0 = (RuleCall)cFeaturesOutputAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExceptionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cExceptiontsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cExceptiontsExceptionCrossReference_5_2_0 = (CrossReference)cExceptiontsAssignment_5_2.eContents().get(0);
		private final RuleCall cExceptiontsExceptionQualifiedNameParserRuleCall_5_2_0_1 = (RuleCall)cExceptiontsExceptionCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cExceptiontsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cExceptiontsExceptionCrossReference_5_3_1_0 = (CrossReference)cExceptiontsAssignment_5_3_1.eContents().get(0);
		private final RuleCall cExceptiontsExceptionQualifiedNameParserRuleCall_5_3_1_0_1 = (RuleCall)cExceptiontsExceptionCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Operation:
		//	"@operation" name=ID "{" ("@input" ":" "{" featuresInput+=Feature+ "}")? ("@output" ":" "{" featuresOutput+=Feature+
		//	"}")? ("@exception" ":" exceptionts+=[Exception|QualifiedName] ("," exceptionts+=[Exception|QualifiedName])*)? "}";
		public ParserRule getRule() { return rule; }

		//"@operation" name=ID "{" ("@input" ":" "{" featuresInput+=Feature+ "}")? ("@output" ":" "{" featuresOutput+=Feature+
		//"}")? ("@exception" ":" exceptionts+=[Exception|QualifiedName] ("," exceptionts+=[Exception|QualifiedName])*)? "}"
		public Group getGroup() { return cGroup; }

		//"@operation"
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("@input" ":" "{" featuresInput+=Feature+ "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"@input"
		public Keyword getInputKeyword_3_0() { return cInputKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_2() { return cLeftCurlyBracketKeyword_3_2; }

		//featuresInput+=Feature+
		public Assignment getFeaturesInputAssignment_3_3() { return cFeaturesInputAssignment_3_3; }

		//Feature
		public RuleCall getFeaturesInputFeatureParserRuleCall_3_3_0() { return cFeaturesInputFeatureParserRuleCall_3_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("@output" ":" "{" featuresOutput+=Feature+ "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"@output"
		public Keyword getOutputKeyword_4_0() { return cOutputKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_2() { return cLeftCurlyBracketKeyword_4_2; }

		//featuresOutput+=Feature+
		public Assignment getFeaturesOutputAssignment_4_3() { return cFeaturesOutputAssignment_4_3; }

		//Feature
		public RuleCall getFeaturesOutputFeatureParserRuleCall_4_3_0() { return cFeaturesOutputFeatureParserRuleCall_4_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//("@exception" ":" exceptionts+=[Exception|QualifiedName] ("," exceptionts+=[Exception|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }

		//"@exception"
		public Keyword getExceptionKeyword_5_0() { return cExceptionKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//exceptionts+=[Exception|QualifiedName]
		public Assignment getExceptiontsAssignment_5_2() { return cExceptiontsAssignment_5_2; }

		//[Exception|QualifiedName]
		public CrossReference getExceptiontsExceptionCrossReference_5_2_0() { return cExceptiontsExceptionCrossReference_5_2_0; }

		//QualifiedName
		public RuleCall getExceptiontsExceptionQualifiedNameParserRuleCall_5_2_0_1() { return cExceptiontsExceptionQualifiedNameParserRuleCall_5_2_0_1; }

		//("," exceptionts+=[Exception|QualifiedName])*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//exceptionts+=[Exception|QualifiedName]
		public Assignment getExceptiontsAssignment_5_3_1() { return cExceptiontsAssignment_5_3_1; }

		//[Exception|QualifiedName]
		public CrossReference getExceptiontsExceptionCrossReference_5_3_1_0() { return cExceptiontsExceptionCrossReference_5_3_1_0; }

		//QualifiedName
		public RuleCall getExceptiontsExceptionQualifiedNameParserRuleCall_5_3_1_0_1() { return cExceptiontsExceptionQualifiedNameParserRuleCall_5_3_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		/// ************************ Service definition ************************* / Event:
		//	"@event" "{" "}";
		public ParserRule getRule() { return rule; }

		//"@event" "{" "}"
		public Group getGroup() { return cGroup; }

		//"@event"
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	
	
	public class PrimitiveTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cShortEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cShortShortKeyword_1_0 = (Keyword)cShortEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIntegerIntegerKeyword_2_0 = (Keyword)cIntegerEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLongLongKeyword_3_0 = (Keyword)cLongEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFloatEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFloatFloatKeyword_4_0 = (Keyword)cFloatEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDoubleDoubleKeyword_5_0 = (Keyword)cDoubleEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cBooleanBooleanKeyword_6_0 = (Keyword)cBooleanEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cByteEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cByteByteKeyword_7_0 = (Keyword)cByteEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cDateDateKeyword_8_0 = (Keyword)cDateEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cDatetimeEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cDatetimeDatetimeKeyword_9_0 = (Keyword)cDatetimeEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cTimestampEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cTimestampTimestampKeyword_10_0 = (Keyword)cTimestampEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cDecimalEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cDecimalDecimalKeyword_11_0 = (Keyword)cDecimalEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum PrimitiveType:
		//	String="@String" | Short="@Short" | Integer="@Integer" | Long="@Long" | Float="@Float" | Double="@Double" |
		//	Boolean="@Boolean" | Byte="@Byte" | Date="@Date" | Datetime="@Datetime" | Timestamp="@Timestamp" | Decimal="@Decimal";
		public EnumRule getRule() { return rule; }

		//String="@String" | Short="@Short" | Integer="@Integer" | Long="@Long" | Float="@Float" | Double="@Double" |
		//Boolean="@Boolean" | Byte="@Byte" | Date="@Date" | Datetime="@Datetime" | Timestamp="@Timestamp" | Decimal="@Decimal"
		public Alternatives getAlternatives() { return cAlternatives; }

		//String="@String"
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }

		//"@String"
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }

		//Short="@Short"
		public EnumLiteralDeclaration getShortEnumLiteralDeclaration_1() { return cShortEnumLiteralDeclaration_1; }

		//"@Short"
		public Keyword getShortShortKeyword_1_0() { return cShortShortKeyword_1_0; }

		//Integer="@Integer"
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_2() { return cIntegerEnumLiteralDeclaration_2; }

		//"@Integer"
		public Keyword getIntegerIntegerKeyword_2_0() { return cIntegerIntegerKeyword_2_0; }

		//Long="@Long"
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_3() { return cLongEnumLiteralDeclaration_3; }

		//"@Long"
		public Keyword getLongLongKeyword_3_0() { return cLongLongKeyword_3_0; }

		//Float="@Float"
		public EnumLiteralDeclaration getFloatEnumLiteralDeclaration_4() { return cFloatEnumLiteralDeclaration_4; }

		//"@Float"
		public Keyword getFloatFloatKeyword_4_0() { return cFloatFloatKeyword_4_0; }

		//Double="@Double"
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_5() { return cDoubleEnumLiteralDeclaration_5; }

		//"@Double"
		public Keyword getDoubleDoubleKeyword_5_0() { return cDoubleDoubleKeyword_5_0; }

		//Boolean="@Boolean"
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_6() { return cBooleanEnumLiteralDeclaration_6; }

		//"@Boolean"
		public Keyword getBooleanBooleanKeyword_6_0() { return cBooleanBooleanKeyword_6_0; }

		//Byte="@Byte"
		public EnumLiteralDeclaration getByteEnumLiteralDeclaration_7() { return cByteEnumLiteralDeclaration_7; }

		//"@Byte"
		public Keyword getByteByteKeyword_7_0() { return cByteByteKeyword_7_0; }

		//Date="@Date"
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_8() { return cDateEnumLiteralDeclaration_8; }

		//"@Date"
		public Keyword getDateDateKeyword_8_0() { return cDateDateKeyword_8_0; }

		//Datetime="@Datetime"
		public EnumLiteralDeclaration getDatetimeEnumLiteralDeclaration_9() { return cDatetimeEnumLiteralDeclaration_9; }

		//"@Datetime"
		public Keyword getDatetimeDatetimeKeyword_9_0() { return cDatetimeDatetimeKeyword_9_0; }

		//Timestamp="@Timestamp"
		public EnumLiteralDeclaration getTimestampEnumLiteralDeclaration_10() { return cTimestampEnumLiteralDeclaration_10; }

		//"@Timestamp"
		public Keyword getTimestampTimestampKeyword_10_0() { return cTimestampTimestampKeyword_10_0; }

		//Decimal="@Decimal"
		public EnumLiteralDeclaration getDecimalEnumLiteralDeclaration_11() { return cDecimalEnumLiteralDeclaration_11; }

		//"@Decimal"
		public Keyword getDecimalDecimalKeyword_11_0() { return cDecimalDecimalKeyword_11_0; }
	}
	
	private final ArchitectureElements pArchitecture;
	private final ModuleElements pModule;
	private final QualifiedNameElements pQualifiedName;
	private final VersionElements pVersion;
	private final ImportElements pImport;
	private final ModelElements pModel;
	private final CommentElements pComment;
	private final EntitiesElements pEntities;
	private final EnumElements pEnum;
	private final EntityElements pEntity;
	private final FeatureElements pFeature;
	private final FeatureTypeElements pFeatureType;
	private final EntitiesFeatureElements pEntitiesFeature;
	private final PrimitiveFeatureElements pPrimitiveFeature;
	private final GenericListFeatureElements pGenericListFeature;
	private final PrimitiveTypeElements unknownRulePrimitiveType;
	private final ExceptionsElements pExceptions;
	private final ExceptionElements pException;
	private final ServiceElements pService;
	private final OperationElements pOperation;
	private final EventElements pEvent;
	private final TerminalRule tCOMMENTS;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SOAGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pArchitecture = new ArchitectureElements();
		this.pModule = new ModuleElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pVersion = new VersionElements();
		this.pImport = new ImportElements();
		this.pModel = new ModelElements();
		this.pComment = new CommentElements();
		this.pEntities = new EntitiesElements();
		this.pEnum = new EnumElements();
		this.pEntity = new EntityElements();
		this.pFeature = new FeatureElements();
		this.pFeatureType = new FeatureTypeElements();
		this.pEntitiesFeature = new EntitiesFeatureElements();
		this.pPrimitiveFeature = new PrimitiveFeatureElements();
		this.pGenericListFeature = new GenericListFeatureElements();
		this.unknownRulePrimitiveType = new PrimitiveTypeElements();
		this.pExceptions = new ExceptionsElements();
		this.pException = new ExceptionElements();
		this.pService = new ServiceElements();
		this.pOperation = new OperationElements();
		this.pEvent = new EventElements();
		this.tCOMMENTS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COMMENTS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.mguidi.soa.SOA".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Architecture:
	//	"@applicationId" ":" name=QualifiedName module=Module;
	public ArchitectureElements getArchitectureAccess() {
		return pArchitecture;
	}
	
	public ParserRule getArchitectureRule() {
		return getArchitectureAccess().getRule();
	}

	//Module:
	//	"@moduleName" ":" name=ID "@version" ":" version=Version imports+=Import* model=Model? exceptions=Exceptions?
	//	services+=Service* event=Event?;
	public ModuleElements getModuleAccess() {
		return pModule;
	}
	
	public ParserRule getModuleRule() {
		return getModuleAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Version:
	//	INT "." INT "." INT ("-" ID)?;
	public VersionElements getVersionAccess() {
		return pVersion;
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}

	//Import:
	//	"@import" ":" importedNamespace=QualifiedName;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	/// ************************ Model definition ************************* / Model:
	//	"@model" "{" entities+=Entities* "}";
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Comment:
	//	value=COMMENTS;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}

	//Entities:
	//	Entity | Enum;
	public EntitiesElements getEntitiesAccess() {
		return pEntities;
	}
	
	public ParserRule getEntitiesRule() {
		return getEntitiesAccess().getRule();
	}

	//Enum:
	//	"@enum" name=ID "{" features+=ID+ "}";
	public EnumElements getEnumAccess() {
		return pEnum;
	}
	
	public ParserRule getEnumRule() {
		return getEnumAccess().getRule();
	}

	//Entity:
	//	"@entity" name=ID "{" features+=Feature+ "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Feature:
	//	featureComment+=Comment* name=ID ":" type=FeatureType;
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//FeatureType:
	//	EntitiesFeature | PrimitiveFeature | GenericListFeature;
	public FeatureTypeElements getFeatureTypeAccess() {
		return pFeatureType;
	}
	
	public ParserRule getFeatureTypeRule() {
		return getFeatureTypeAccess().getRule();
	}

	//EntitiesFeature:
	//	type=[Entities|QualifiedName];
	public EntitiesFeatureElements getEntitiesFeatureAccess() {
		return pEntitiesFeature;
	}
	
	public ParserRule getEntitiesFeatureRule() {
		return getEntitiesFeatureAccess().getRule();
	}

	//PrimitiveFeature:
	//	type=PrimitiveType;
	public PrimitiveFeatureElements getPrimitiveFeatureAccess() {
		return pPrimitiveFeature;
	}
	
	public ParserRule getPrimitiveFeatureRule() {
		return getPrimitiveFeatureAccess().getRule();
	}

	//GenericListFeature:
	//	"@List" "<" type=FeatureType ">";
	public GenericListFeatureElements getGenericListFeatureAccess() {
		return pGenericListFeature;
	}
	
	public ParserRule getGenericListFeatureRule() {
		return getGenericListFeatureAccess().getRule();
	}

	//enum PrimitiveType:
	//	String="@String" | Short="@Short" | Integer="@Integer" | Long="@Long" | Float="@Float" | Double="@Double" |
	//	Boolean="@Boolean" | Byte="@Byte" | Date="@Date" | Datetime="@Datetime" | Timestamp="@Timestamp" | Decimal="@Decimal";
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return unknownRulePrimitiveType;
	}
	
	public EnumRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	/// ************************ Service definition ************************* / Exceptions:
	//	"@exceptions" "{" exceptions+=Exception+ "}";
	public ExceptionsElements getExceptionsAccess() {
		return pExceptions;
	}
	
	public ParserRule getExceptionsRule() {
		return getExceptionsAccess().getRule();
	}

	//Exception:
	//	"@exception" name=ID "{" "@msg" ":" msg=STRING "}";
	public ExceptionElements getExceptionAccess() {
		return pException;
	}
	
	public ParserRule getExceptionRule() {
		return getExceptionAccess().getRule();
	}

	/// ************************ Service definition ************************* / Service:
	//	"@service" name=ID "{" operations+=Operation+ "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Operation:
	//	"@operation" name=ID "{" ("@input" ":" "{" featuresInput+=Feature+ "}")? ("@output" ":" "{" featuresOutput+=Feature+
	//	"}")? ("@exception" ":" exceptionts+=[Exception|QualifiedName] ("," exceptionts+=[Exception|QualifiedName])*)? "}";
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	/// ************************ Service definition ************************* / Event:
	//	"@event" "{" "}";
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//terminal COMMENTS:
	//	"#" "^"? ("a".."z" | "A".."Z" | "_" | " ") ("a".."z" | "A".."Z" | "_" | "0".."9" | " ")*;
	public TerminalRule getCOMMENTSRule() {
		return tCOMMENTS;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
